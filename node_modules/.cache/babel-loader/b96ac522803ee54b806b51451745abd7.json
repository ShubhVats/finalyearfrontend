{"ast":null,"code":"var _jsxFileName = \"/Users/shubhsharma/Desktop/Shubh/personal/college/Sem - 7&8/FinalYearProject/Merntestprojects/mern-exercise-tracker/src/screens/ELearning.js\",\n    _s = $RefreshSig$();\n\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import axios from \"axios\";\n// import Container from \"@material-ui/core/Container\";\n// import React, { useEffect, useState } from \"react\";\n// import Header from \"../helpers/Header\";\n// import SimpleModal from \"../helpers/CollegeInfoModal\";\n// const sections = [\n//   {\n//     title: \"Top Universities\",\n//     url: \"http://localhost:3000/UniversityData\",\n//     date: \"Nov 12\",\n//     description:\n//       \"Discover the top universities around the world with the World University Rankings 2022, or go in depth on a particular region with the QS World University Rankings by Region 2022.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"Top Courses\",\n//     url: \"http://localhost:3000/TopCourses\",\n//     date: \"Nov 11\",\n//     description:\n//       \"Choosing the Right Course for the Career is the most crucial decision to make and can be troublesome if not guided properly. In the current scenario with so many available options for courses and tough competition, it is very hard and confusing to decide for both students and parents. With so many influential people around, we often get swayed or simply do what is told by our parents.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"Upcoming Exams\",\n//     url: \"http://localhost:3000/Exams\",\n//     date: \"Nov 11\",\n//     description:\n//       \"Govt. Jobs: The number of Government job aspirants is increasing at an alarming rate in India. More and more aspirants are applying for Government job posts each year.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"Admission 2021\",\n//     url: \"http://localhost:3000/UniversityData\",\n//     date: \"Nov 12\",\n//     description:\n//       \"83,075 MBBS seats recognized by the National Medical Commission (NMC) every year\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"eLearning\",\n//     url: \"http://localhost:3000/eLearning\",\n//     date: \"Nov 11\",\n//     description:\n//       \"eLearning Learning is a collection of the leading industry thought leadership in the form of blogs, webinars, and downloadable resources, on one convenient website. We use reader data to auto-curate the articles, meaning that the most valuable resources move to the top. Additionally, you can sign up for our Daily or Weekly newsletters to receive these top-ranked articles right in your inbox, or you can sign up to be notified when new resources like webinars or ebooks are available.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n// ];\n// export default function ELearning() {\n//   const [collegeData, setCollegeData] = useState({});\n//   const classes = useStyles();\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:5000/Datas/\")\n//       .then((res) => {\n//         console.log(res.data);\n//         setCollegeData(res.data);\n//       })\n//       .catch((err) => \"Error: \" + err);\n//   }, []);\n//   return (\n//     <div>\n//       <Container maxWidth=\"lg\">\n//         <Header sections={sections} />\n//       </Container>\n//     </div>\n//   );\n// }\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650,\n//   },\n// });\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { GoogleFormProvider, useGoogleForm } from \"react-google-forms-hooks\";\nimport form from \"../helpers/form.json\";\nimport CheckboxInput from \"./components/CheckboxInput\";\nimport RadioInput from \"./components/RadioInput\";\nimport ShortAnswerInput from \"./components/ShortAnswerInput\";\nimport LongAnswerInput from \"./components/LongAnswerInput\";\nimport RadioGridInput from \"./components/RadioGridInput\";\nimport CheckboxGridInput from \"./components/CheckboxGridInput\";\nimport DropdownInput from \"./components/DropdownInput\";\nimport LinearGrid from \"./components/LinearGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 50px 0;\n`;\n_c = Form;\nconst QuestionContainer = styled.div`\n  margin-bottom: 20px;\n`;\n_c2 = QuestionContainer;\nconst QuestionLabel = styled.h3`\n  margin-bottom: 10px;\n`;\n_c3 = QuestionLabel;\n\nconst Questions = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: form.fields.map(field => {\n      const {\n        id\n      } = field;\n      let questionInput = null;\n\n      switch (field.type) {\n        case \"CHECKBOX\":\n          questionInput = /*#__PURE__*/_jsxDEV(CheckboxInput, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"RADIO\":\n          questionInput = /*#__PURE__*/_jsxDEV(RadioInput, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"SHORT_ANSWER\":\n          questionInput = /*#__PURE__*/_jsxDEV(ShortAnswerInput, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"LONG_ANSWER\":\n          questionInput = /*#__PURE__*/_jsxDEV(LongAnswerInput, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"RADIO_GRID\":\n          questionInput = /*#__PURE__*/_jsxDEV(RadioGridInput, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"CHECKBOX_GRID\":\n          questionInput = /*#__PURE__*/_jsxDEV(CheckboxGridInput, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"DROPDOWN\":\n          questionInput = /*#__PURE__*/_jsxDEV(DropdownInput, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"LINEAR\":\n          questionInput = /*#__PURE__*/_jsxDEV(LinearGrid, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this);\n          break;\n\n        default:\n          return null;\n      }\n\n      if (!questionInput) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsxDEV(QuestionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionLabel, {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), questionInput]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Questions;\n\nconst ELearning = () => {\n  _s();\n\n  const methods = useGoogleForm({\n    form\n  });\n\n  const onSubmit = async data => {\n    console.log(\">>> Here is the data\", data);\n    await methods.submitToGoogleForms(data);\n    alert(\"Form submitted with success!\");\n  };\n\n  console.log(\">>> Here are the errors!!!\", methods.formState.errors);\n  return /*#__PURE__*/_jsxDEV(GoogleFormProvider, { ...methods,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: methods.handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Questions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ELearning, \"ob8vsrvQU8IzHHmim52Vca0SXyI=\", false, function () {\n  return [useGoogleForm];\n});\n\n_c5 = ELearning;\nexport default ELearning;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"QuestionContainer\");\n$RefreshReg$(_c3, \"QuestionLabel\");\n$RefreshReg$(_c4, \"Questions\");\n$RefreshReg$(_c5, \"ELearning\");","map":{"version":3,"sources":["/Users/shubhsharma/Desktop/Shubh/personal/college/Sem - 7&8/FinalYearProject/Merntestprojects/mern-exercise-tracker/src/screens/ELearning.js"],"names":["React","styled","GoogleFormProvider","useGoogleForm","form","CheckboxInput","RadioInput","ShortAnswerInput","LongAnswerInput","RadioGridInput","CheckboxGridInput","DropdownInput","LinearGrid","Form","QuestionContainer","div","QuestionLabel","h3","Questions","fields","map","field","id","questionInput","type","label","ELearning","methods","onSubmit","data","console","log","submitToGoogleForms","alert","formState","errors","handleSubmit"],"mappings":"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","sourcesContent":["// import { makeStyles } from \"@material-ui/core/styles\";\n\n// import axios from \"axios\";\n// import Container from \"@material-ui/core/Container\";\n// import React, { useEffect, useState } from \"react\";\n\n// import Header from \"../helpers/Header\";\n// import SimpleModal from \"../helpers/CollegeInfoModal\";\n\n// const sections = [\n//   {\n//     title: \"Top Universities\",\n//     url: \"http://localhost:3000/UniversityData\",\n//     date: \"Nov 12\",\n//     description:\n//       \"Discover the top universities around the world with the World University Rankings 2022, or go in depth on a particular region with the QS World University Rankings by Region 2022.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"Top Courses\",\n//     url: \"http://localhost:3000/TopCourses\",\n//     date: \"Nov 11\",\n//     description:\n//       \"Choosing the Right Course for the Career is the most crucial decision to make and can be troublesome if not guided properly. In the current scenario with so many available options for courses and tough competition, it is very hard and confusing to decide for both students and parents. With so many influential people around, we often get swayed or simply do what is told by our parents.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"Upcoming Exams\",\n//     url: \"http://localhost:3000/Exams\",\n//     date: \"Nov 11\",\n//     description:\n//       \"Govt. Jobs: The number of Government job aspirants is increasing at an alarming rate in India. More and more aspirants are applying for Government job posts each year.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"Admission 2021\",\n//     url: \"http://localhost:3000/UniversityData\",\n//     date: \"Nov 12\",\n//     description:\n//       \"83,075 MBBS seats recognized by the National Medical Commission (NMC) every year\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n//   {\n//     title: \"eLearning\",\n//     url: \"http://localhost:3000/eLearning\",\n//     date: \"Nov 11\",\n//     description:\n//       \"eLearning Learning is a collection of the leading industry thought leadership in the form of blogs, webinars, and downloadable resources, on one convenient website. We use reader data to auto-curate the articles, meaning that the most valuable resources move to the top. Additionally, you can sign up for our Daily or Weekly newsletters to receive these top-ranked articles right in your inbox, or you can sign up to be notified when new resources like webinars or ebooks are available.\",\n//     image:\n//       \"https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\n//     imageText: \"Image Text\",\n//   },\n// ];\n\n// export default function ELearning() {\n//   const [collegeData, setCollegeData] = useState({});\n//   const classes = useStyles();\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:5000/Datas/\")\n//       .then((res) => {\n//         console.log(res.data);\n//         setCollegeData(res.data);\n//       })\n//       .catch((err) => \"Error: \" + err);\n//   }, []);\n//   return (\n//     <div>\n//       <Container maxWidth=\"lg\">\n//         <Header sections={sections} />\n//       </Container>\n//     </div>\n//   );\n// }\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650,\n//   },\n// });\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { GoogleFormProvider, useGoogleForm } from \"react-google-forms-hooks\";\n\nimport form from \"../helpers/form.json\";\n\nimport CheckboxInput from \"./components/CheckboxInput\";\nimport RadioInput from \"./components/RadioInput\";\nimport ShortAnswerInput from \"./components/ShortAnswerInput\";\nimport LongAnswerInput from \"./components/LongAnswerInput\";\nimport RadioGridInput from \"./components/RadioGridInput\";\nimport CheckboxGridInput from \"./components/CheckboxGridInput\";\nimport DropdownInput from \"./components/DropdownInput\";\nimport LinearGrid from \"./components/LinearGrid\";\n\nconst Form = styled.form`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 50px 0;\n`;\n\nconst QuestionContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst QuestionLabel = styled.h3`\n  margin-bottom: 10px;\n`;\n\nconst Questions = () => {\n  return (\n    <div>\n      {form.fields.map((field) => {\n        const { id } = field;\n\n        let questionInput = null;\n        switch (field.type) {\n          case \"CHECKBOX\":\n            questionInput = <CheckboxInput id={id} />;\n            break;\n          case \"RADIO\":\n            questionInput = <RadioInput id={id} />;\n            break;\n          case \"SHORT_ANSWER\":\n            questionInput = <ShortAnswerInput id={id} />;\n            break;\n          case \"LONG_ANSWER\":\n            questionInput = <LongAnswerInput id={id} />;\n            break;\n          case \"RADIO_GRID\":\n            questionInput = <RadioGridInput id={id} />;\n            break;\n          case \"CHECKBOX_GRID\":\n            questionInput = <CheckboxGridInput id={id} />;\n            break;\n          case \"DROPDOWN\":\n            questionInput = <DropdownInput id={id} />;\n            break;\n          case \"LINEAR\":\n            questionInput = <LinearGrid id={id} />;\n            break;\n          default:\n            return null;\n        }\n\n        if (!questionInput) {\n          return null;\n        }\n\n        return (\n          <QuestionContainer key={id}>\n            <QuestionLabel>{field.label}</QuestionLabel>\n            {questionInput}\n          </QuestionContainer>\n        );\n      })}\n    </div>\n  );\n};\n\nconst ELearning = () => {\n  const methods = useGoogleForm({ form });\n  const onSubmit = async (data) => {\n    console.log(\">>> Here is the data\", data);\n    await methods.submitToGoogleForms(data);\n    alert(\"Form submitted with success!\");\n  };\n\n  console.log(\">>> Here are the errors!!!\", methods.formState.errors);\n\n  return (\n    <GoogleFormProvider {...methods}>\n      <Form onSubmit={methods.handleSubmit(onSubmit)}>\n        <Questions />\n        <button type=\"submit\">Submit</button>\n      </Form>\n    </GoogleFormProvider>\n  );\n};\n\nexport default ELearning;\n"]},"metadata":{},"sourceType":"module"}