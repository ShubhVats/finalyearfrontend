{"ast":null,"code":"var _jsxFileName = \"/Users/shubhsharma/Desktop/Shubh/personal/college/Sem - 7&8/FinalYearProject/Merntestprojects/mern-exercise-tracker/src/helpers/Popover.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Popover from \"@mui/material/Popover\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { Link as Linker } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicPopover(props) {\n  _s();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const getUserData = async () => {\n    const user = await getAuth();\n\n    if (user != null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            p: 2\n          },\n          onClick: () => {\n            signOut(getAuth());\n          },\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Linker, {\n        to: \"/SignInSide\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            p: 2\n          },\n          children: \"The content of the Popover.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, [getUserData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      onClick: handleClick,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      children: getUserData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicPopover, \"7zX7zTj3b/qZlazOz0DgeZqlQwQ=\");\n\n_c = BasicPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicPopover\");","map":{"version":3,"sources":["/Users/shubhsharma/Desktop/Shubh/personal/college/Sem - 7&8/FinalYearProject/Merntestprojects/mern-exercise-tracker/src/helpers/Popover.js"],"names":["React","Popover","Typography","Button","getAuth","signOut","Link","Linker","BasicPopover","props","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","getUserData","user","p","useEffect","text","vertical","horizontal"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,eAAjC;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,kBAA/B;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACY,QAAN,CAAe,IAAf,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,IAAI,GAAGC,OAAO,CAACR,QAAD,CAApB;AACA,QAAMS,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,IAAI,GAAG,MAAMlB,OAAO,EAA1B;;AACA,QAAIkB,IAAI,IAAI,IAAZ,EAAkB;AAChB,0BACE;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,EAAE,EAAE;AAAEC,YAAAA,CAAC,EAAE;AAAL,WADN;AAEE,UAAA,OAAO,EAAE,MAAM;AACblB,YAAAA,OAAO,CAACD,OAAO,EAAR,CAAP;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbD,MAaO;AACL,0BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE;AAAEmB,YAAAA,CAAC,EAAE;AAAL,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAtBD;;AAwBAC,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAwC,MAAA,OAAO,EAAER,WAAjD;AAAA,gBACGJ,KAAK,CAACgB;AADT;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AACE,MAAA,EAAE,EAAEN,EADN;AAEE,MAAA,IAAI,EAAEF,IAFR;AAGE,MAAA,QAAQ,EAAEP,QAHZ;AAIE,MAAA,OAAO,EAAEM,WAJX;AAKE,MAAA,YAAY,EAAE;AACZU,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OALhB;AAAA,gBAUGN,WAAW;AAVd;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA7DuBb,Y;;KAAAA,Y","sourcesContent":["import * as React from \"react\";\nimport Popover from \"@mui/material/Popover\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { Link as Linker } from \"react-router-dom\";\n\nexport default function BasicPopover(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const getUserData = async () => {\n    const user = await getAuth();\n    if (user != null) {\n      return (\n        <div>\n          <Typography\n            sx={{ p: 2 }}\n            onClick={() => {\n              signOut(getAuth());\n            }}\n          >\n            Sign Out\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <Linker to=\"/SignInSide\">\n          <Typography sx={{ p: 2 }}>The content of the Popover.</Typography>\n        </Linker>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, [getUserData]);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" size=\"small\" onClick={handleClick}>\n        {props.text}\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        {getUserData()}\n      </Popover>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}